// Generated by CoffeeScript 1.7.1
(function() {
  var Cube, Dimension, Position, PositionCenter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Dimension = (function() {
    function Dimension(height, width, depth) {
      this.height = height;
      this.width = width;
      this.depth = depth;
    }

    Dimension.prototype.h = (function() {
      return this.height;
    });

    Dimension.prototype.w = (function() {
      return this.width;
    });

    Dimension.prototype.d = (function() {
      return this.depth;
    });

    return Dimension;

  })();

  Position = (function() {
    function Position(x, y, z) {
      this.x = x;
      this.y = y;
      this.z = z;
    }

    return Position;

  })();

  PositionCenter = (function(_super) {
    __extends(PositionCenter, _super);

    function PositionCenter() {
      this.x = 0;
      this.y = 0;
      this.z = 0;
    }

    return PositionCenter;

  })(Position);

  Cube = (function() {
    function Cube(dimension, position) {
      var geometry, material;
      if (dimension == null) {
        dimension = new Dimension(10, 10, 10);
      }
      if (position == null) {
        position = new PositionCenter();
      }
      geometry = new THREE.CubeGeometry(dimension.h(), dimension.w(), dimension.d());
      material = new THREE.MeshBasicMaterial({
        wireframe: true,
        color: 'red'
      });
      this.mesh = new THREE.Mesh(geometry, material);
      this.mesh.position.x = position.x;
      this.mesh.position.y = position.y;
      this.mesh.position.z = position.z;
    }

    Cube.prototype.animate = function() {};

    Cube.prototype.t = function() {
      return this.mesh;
    };

    return Cube;

  })();

}).call(this);
